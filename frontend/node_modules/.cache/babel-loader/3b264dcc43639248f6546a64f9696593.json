{"ast":null,"code":"var _jsxFileName = \"D:\\\\Side Projects\\\\blogapp\\\\frontend\\\\src\\\\components\\\\singlepost\\\\SinglePost.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Context } from '../../context/Context';\nimport './singlepost.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SinglePost() {\n  _s();\n\n  const location = useLocation();\n  const path = location.pathname.split(\"/\")[2]; //get the post id from the url\n\n  const [post, setPost] = useState({}); //const PF = \"http://localhost:5000/images/\";\n\n  const {\n    user\n  } = useContext(Context);\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [updateMode, setUpdateMode] = useState(false);\n  useEffect(() => {\n    const getPost = async () => {\n      const res = await axios.get(\"/posts/\" + path);\n      setPost(res.data);\n    };\n\n    getPost();\n  }, [path]);\n\n  const handleDelete = async () => {\n    try {\n      await axios.delete(`/posts/${post._id}`, {\n        data: {\n          username: user.username\n        }\n      });\n      window.location.replace(\"/\");\n    } catch (error) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"singlePost\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"singlePostWrapper\",\n      children: [post.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"singlePostImg\",\n        src: post.photo,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"singlePostTitle\",\n        children: [post.title, post.username === (user === null || user === void 0 ? void 0 : user.username) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"singlePostEdit\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon fa-solid fa-pen-to-square\",\n            onClick: () => setUpdateMode(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon fa-solid fa-circle-minus\",\n            onClick: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singlePostInfo\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/?user=${post.username}`,\n          style: {\n            textDecoration: \"none\",\n            color: \"inherit\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"singlePostAuthor\",\n            children: [\"Author: \", post.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostDate\",\n          children: new Date(post.createdAt).toDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"singlePostDesc\",\n        children: post.desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SinglePost, \"7Bl5IL6Dfbq13qVs//WZEXHsGYw=\", false, function () {\n  return [useLocation];\n});\n\n_c = SinglePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"sources":["D:/Side Projects/blogapp/frontend/src/components/singlepost/SinglePost.jsx"],"names":["axios","React","useContext","useEffect","useState","Link","useLocation","Context","SinglePost","location","path","pathname","split","post","setPost","user","title","setTitle","desc","setDesc","updateMode","setUpdateMode","getPost","res","get","data","handleDelete","delete","_id","username","window","replace","error","photo","textDecoration","color","Date","createdAt","toDateString"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport { Context } from '../../context/Context';\r\nimport './singlepost.css'\r\n\r\nexport default function SinglePost() {\r\n  const location = useLocation();\r\n  const path = location.pathname.split(\"/\")[2];      //get the post id from the url\r\n  const [post,setPost] = useState({})\r\n  //const PF = \"http://localhost:5000/images/\";\r\n  const {user} = useContext(Context) \r\n  const [title, setTitle] = useState(\"\"); \r\n  const [desc, setDesc] = useState(\"\"); \r\n  const [updateMode, setUpdateMode] = useState(false); \r\n\r\n\r\n  useEffect (()=>{\r\n\r\n    const getPost = async () =>{\r\n      const res = await axios.get(\"/posts/\"+path);\r\n      setPost(res.data);\r\n    }\r\n    getPost()\r\n\r\n  },[path])\r\n\r\n  const handleDelete = async() =>{\r\n\r\n    try {\r\n      await axios.delete(`/posts/${post._id}`,{data: {username: user.username}});\r\n      window.location.replace(\"/\");\r\n\r\n    } catch (error) {\r\n      \r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div className='singlePost'>\r\n        <div className=\"singlePostWrapper\">\r\n          {post.photo && (\r\n          <img className='singlePostImg'src={post.photo} alt=\"\" />\r\n\r\n          )\r\n          \r\n          }\r\n          {updateMode ? <input type=\"text\" value={post.title}></input> :\r\n\r\n          (\r\n          <h1 className=\"singlePostTitle\">\r\n            {post.title}\r\n            {post.username === user?.username && (\r\n              <div className=\"singlePostEdit\">\r\n              <i className=\"singlePostIcon fa-solid fa-pen-to-square\" onClick={ ()=> setUpdateMode(true)}></i>\r\n              <i className=\"singlePostIcon fa-solid fa-circle-minus\" onClick={handleDelete}></i>\r\n              </div>\r\n              )}\r\n          </h1>\r\n          )}\r\n          \r\n          <div className=\"singlePostInfo\">\r\n          <Link to = {`/?user=${post.username}`} style={{textDecoration:\"none\", color:\"inherit\"}}>\r\n              <span className='singlePostAuthor'>Author: {post.username}</span>\r\n          </Link>\r\n              <span className='singlePostDate'>{new Date(post.createdAt).toDateString()}</span>\r\n          </div>\r\n          <p className='singlePostDesc'>\r\n            {post.desc}\r\n          </p>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}